{
  "nodes": [
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "1",
          "position": {
              "x": 1483,
              "y": 235.5
          },
          "data": {
              "label": "Introduction",
              "content": {
                  "topicTitle": "TypeScript",
                  "markdownText": "\nTypeScript is a statically-typed programming language that is a superset of JavaScript. It was developed and is maintained by Microsoft. TypeScript was created to address the challenges of building large-scale JavaScript applications and adds optional type annotations, classes, interfaces, and other features to the language.\n\nThe main benefits of using TypeScript include:\n* Type Safety\n* Improved Tooling\n* Improved Maintainability\n* Backwards Compatibility\n\nLearn more from the folowing links:\n* [Overview of TypeScript](https://www.typescriptlang.org/docs/handbook/typescript-from-scratch.html)\n* [What Is TypeScript?](https://thenewstack.io/what-is-typescript/)"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1483,
              "y": 235.5
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 114,
          "height": 33,
          "type": "textNode",
          "id": "2",
          "position": {
              "x": 1476.5,
              "y": 121.25
          },
          "data": {
              "label": "TypeScript",
              "settings": {
                  "color": "#d5d5d5",
                  "textSize": 22
              }
          },
          "style": {
              "zIndex": 1,
              "color": "#d5d5d5",
              "fontSize": 22
          },
          "selected": false,
          "dragging": false,
          "positionAbsolute": {
              "x": 1476.5,
              "y": 121.25
          },
          "className": ""
      },
      {
          "width": 330,
          "height": 201,
          "type": "groupNode",
          "id": "3",
          "position": {
              "x": 1614.1879999999994,
              "y": 164.51847145381473
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "groupNode"
          },
          "style": {
              "zIndex": -1,
              "width": 330,
              "height": 201
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1614.1879999999994,
              "y": 164.51847145381473
          },
          "dragging": false,
          "className": "",
          "resizing": false
      },
      {
          "width": 135,
          "height": 40,
          "type": "squareNode",
          "id": "4",
          "position": {
              "x": 24.70800000000031,
              "y": 70.09600000000003
          },
          "data": {
              "label": "Running TypeScript",
              "content": {
                  "topicTitle": "Running TypeScript",
                  "markdownText": "To run TypeScript code, you’ll need to have a TypeScript compiler installed. Here’s a general process to run TypeScript code:\n* Write TypeScript code in a `.ts` file (e.g. `app.ts`)\n*  Compile the TypeScript code into JavaScript using the TypeScript compiler:\n```cmd\ntsc app.ts\n```\n* Run the generated JavaScript code using a JavaScript runtime environment such as Node.js:\n```cmd\nnode app.js\n```"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1638.8959999999997,
              "y": 234.61447145381476
          },
          "dragging": false,
          "className": "",
          "parentNode": "3"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "5",
          "position": {
              "x": 210.41200000000003,
              "y": 19.848000000000013
          },
          "data": {
              "label": "tac",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1824.5999999999995,
              "y": 184.36647145381474
          },
          "dragging": false,
          "className": "",
          "parentNode": "3"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "6",
          "position": {
              "x": 209.54800000000023,
              "y": 78.50800000000001
          },
          "data": {
              "label": "ts-node",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1823.7359999999996,
              "y": 243.02647145381474
          },
          "dragging": false,
          "className": "",
          "parentNode": "3"
      },
      {
          "width": 103,
          "height": 40,
          "type": "squareNode",
          "id": "7",
          "position": {
              "x": 207.54800000000023,
              "y": 137.532
          },
          "data": {
              "label": "TS Playground",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1821.7359999999996,
              "y": 302.05047145381474
          },
          "dragging": false,
          "className": "",
          "parentNode": "3"
      },
      {
          "width": 168,
          "height": 40,
          "type": "squareNode",
          "id": "8",
          "position": {
              "x": 1244.4599999999996,
              "y": 237.83995750632783
          },
          "data": {
              "label": "TypeScript vs JavaScript",
              "content": {
                  "topicTitle": "TypeScript vs JavaScript",
                  "markdownText": "TypeScript is a superset of JavaScript that adds optional type annotations and other features such as interfaces, classes, and namespaces. JavaScript is a dynamically-typed language that is primarily used for client-side web development and can also be used for server-side development.\n\nHere are a few key differences between TypeScript and JavaScript:\n* __Types__: TypeScript has optional type annotations while JavaScript is dynamically-typed. This means that in TypeScript, you can specify the data type of variables, parameters, and return values, which can help catch type-related errors at compile-time.\n* __Syntax__: TypeScript extends JavaScript syntax with features like interfaces, classes, and namespaces. This provides a more robust and organized structure for large-scale projects.\n* __Tooling__: TypeScript has better tooling support, such as better editor integration, type checking, and code refactoring.\n* __Backwards Compatibility__: TypeScript is fully compatible with existing JavaScript code, which means you can use TypeScript in any JavaScript environment.\n\n[Learning JavaScript and TypeScript](https://www.typescriptlang.org/docs/handbook/typescript-from-scratch.html#learning-javascript-and-typescript)"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1244.4599999999996,
              "y": 237.83995750632783
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 139,
          "height": 40,
          "type": "squareNode",
          "id": "9",
          "position": {
              "x": 31.000319999999647,
              "y": 38.392348864188136
          },
          "data": {
              "label": "Types",
              "content": {
                  "topicTitle": "TypeScript Types",
                  "markdownText": "TypeScript has several built-in types, including:\n\n* number\n* string\n* boolean\n* any\n* void\n* null and undefined\n* never\n* object\n* symbol\n* Enumerated types (enum)\n* Tuple types\n* Array types\n* Union types\n* Intersection types\n* Type aliases\n* Type assertions\n\nYou can also create custom types in TypeScript using interfaces, classes, and type aliases."
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "width": 139,
              "height": 40
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1424.9467199999997,
              "y": 418.96998267670256
          },
          "dragging": false,
          "className": "",
          "parentNode": "10",
          "resizing": false
      },
      {
          "width": 200,
          "height": 200,
          "type": "groupNode",
          "id": "10",
          "position": {
              "x": 1393.9464,
              "y": 380.5776338125144
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "groupNode"
          },
          "style": {
              "zIndex": -1
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1393.9464,
              "y": 380.5776338125144
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 134,
          "height": 40,
          "type": "squareNode",
          "id": "11",
          "position": {
              "x": 33.59231999999997,
              "y": 79.00415999999996
          },
          "data": {
              "label": "Interface",
              "content": {
                  "topicTitle": "Type Inteface",
                  "markdownText": "Type inference in TypeScript refers to the process of automatically determining the type of a variable based on the value assigned to it. This allows you to write code that is more concise and easier to understand, as the TypeScript compiler can deduce the types of variables without you having to explicitly specify them.\n\nHere’s an example of type inference in TypeScript:\n```ts\nlet name = 'John Doe';\n```\nIn this example, the TypeScript compiler automatically infers that the type of the name variable is string. This means that you can use the name variable just like any other string in your code, and the TypeScript compiler will ensure that you don’t perform any invalid operations on it."
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "width": 134,
              "height": 40
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1427.53872,
              "y": 459.5817938125144
          },
          "dragging": false,
          "className": "",
          "parentNode": "10",
          "resizing": false
      },
      {
          "width": 137,
          "height": 40,
          "type": "squareNode",
          "id": "12",
          "position": {
              "x": 32.34815999999978,
              "y": 120.06143999999989
          },
          "data": {
              "label": "Types Compatibility",
              "content": {
                  "topicTitle": "Types Compatibility",
                  "markdownText": "TypeScript uses structural typing to determine type compatibility. This means that two types are considered compatible if they have the same structure, regardless of their names.\n\nHere’s an example of type compatibility in TypeScript:\n```ts\ninterface Point {\n  x: number;\n  y: number;\n}\n\nlet p1: Point = { x: 10, y: 20 };\nlet p2: { x: number; y: number } = p1;\n\nconsole.log(p2.x); // Output: 10\n```\n\nIn this example,  `p1` has the type `Point`, while `p2` has the type `{ x: number; y: number }`. Despite the fact that the two types have different names, they are considered compatible because they have the same structure. This means that you can assign a value of type `Point` to a variable of type `{ x: number; y: number }`, as we do with `p1` and `p2` in this example."
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1426.2945599999998,
              "y": 500.6390738125143
          },
          "dragging": false,
          "className": "",
          "parentNode": "10"
      },
      {
          "width": 120,
          "height": 40,
          "type": "squareNode",
          "id": "13",
          "position": {
              "x": 1689.9761600000004,
              "y": 632.9795538125143
          },
          "data": {
              "label": "Combining Types",
              "content": {
                  "topicTitle": "Combining Types",
                  "markdownText": "In TypeScript, you can combine types using type union and type intersection.\n##### Type Union:\nThe union operator `|` is used to combine two or more types into a single type that represents all the possible types. For example:\n```ts\ntype stringOrNumber = string | number;\nlet value: stringOrNumber = 'hello';\n\nvalue = 42;\n```\n##### Type Intersection:\nThe intersection operator `&` is used to intersect two or more types into a single type that represents the properties of all the types. For example:\n```ts\ninterface A {\n  a: string;\n}\n\ninterface B {\n  b: number;\n}\n\ntype AB = A & B;\nlet value: AB = { a: 'hello', b: 42 };\n```"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1689.9761600000004,
              "y": 632.9795538125143
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "14",
          "position": {
              "x": 1279.6068266666673,
              "y": 672.754220479181
          },
          "data": {
              "label": "Type Guards",
              "content": {
                  "topicTitle": "Type Guards",
                  "markdownText": "Type guards are a way to narrow down the type of a variable. This is useful when you want to do something different depending on the type of a variable.\n\nLearn more from the following resources:\n\n[Type Guards - TypeScript Docs](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#typeof-type-guards)"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1279.6068266666673,
              "y": 672.754220479181
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "15",
          "position": {
              "x": 1425.0481600000005,
              "y": 786.4515538125142
          },
          "data": {
              "label": "Functions",
              "content": {
                  "topicTitle": "Functions",
                  "markdownText": "Functions are a core building block in TypeScript. Functions allow you to wrap a piece of code and reuse it multiple times. Functions in TypeScript can be either declared using function declaration syntax or function expression syntax.\n\n> Function Declaration Syntax:\n```ts\nfunction name(param1: type1, param2: type2, ...): returnType {\n  return value;\n}\n```\n> Function Expression Syntax:\n```ts\nlet name = function(param1: type1, param2: type2, ...): returnType {\n  return value;\n};\n```"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1425.0481600000005,
              "y": 786.4515538125142
          },
          "dragging": true,
          "className": ""
      },
      {
          "width": 115,
          "height": 40,
          "type": "squareNode",
          "id": "16",
          "position": {
              "x": 1260.9738432000013,
              "y": 918.9332882125143
          },
          "data": {
              "label": "Advanced Types",
              "content": {
                  "topicTitle": "Advanced Types",
                  "markdownText": "Advanced types in TypeScript are a set of advanced type constructs that allow for more complex and expressive type systems. Some of the most commonly used advanced types in TypeScript include:\n\n* Intersection Types\n* Union Types\n* Type Aliases\n* Conditional Types\n* Index Types\n* Mapped Types\n* Type Guards\nThese advanced types allow for more complex and expressive type systems, and enable you to write code that is safer, more maintainable, and easier to understand. By leveraging these advanced types, you can write code that is more robust, less prone to errors, and easier to maintain.\n\nLearn more from the following links:\n\n* [Advanced Topics](https://www.typescriptlang.org/docs/handbook/type-compatibility.html#advanced-topics)\n* [Tutorial of Typescript - Advanced Types](https://www.youtube.com/playlist?list=PLw5h0DiJ-9PBIgIyd2ZA1CVnJf0BLFJg2)\n\n"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1260.9738432000013,
              "y": 918.9332882125143
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 135,
          "height": 40,
          "type": "squareNode",
          "id": "17",
          "position": {
              "x": 1594.5291648000011,
              "y": 985.6104998069477
          },
          "data": {
              "label": "TypeScript Modules",
              "content": {
                  "topicTitle": "Modules",
                  "markdownText": "In TypeScript, modules are used to organize and reuse code. There are two types of modules in TypeScript:\n\n* Internal\n *External\n\nInternal modules are used to organize code within a file and are also referred to as namespaces. They are defined using the “namespace” keyword.\n\nExternal modules are used to organize code across multiple files. They are defined using the “export” keyword in one file and the “import” keyword in another file. External modules in TypeScript follow the CommonJS or ES modules standards.\n\nHere is an example of how you can use internal modules in TypeScript:\n```typescript\n// myModule.ts\nnamespace MyModule {\n  export function doSomething() {\n    console.log('Doing something...');\n  }\n}\n\n// main.ts\n/// <reference path=\"myModule.ts\" />\nMyModule.doSomething(); // Output: \"Doing something...\"\n```\nLearn more from the following links:\n\n* [Modules](https://www.typescriptlang.org/docs/handbook/modules.html#handbook-content)\n* [TypeScript - Modules](https://www.youtube.com/watch?v=EpOPR03z4Vw)\n"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "className": "",
          "positionAbsolute": {
              "x": 1594.5291648000011,
              "y": 985.6104998069477
          },
          "dragging": false
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "18",
          "position": {
              "x": 1393.1743104000013,
              "y": 1153.4393894069472
          },
          "data": {
              "label": "Ecosystem",
              "content": {
                  "topicTitle": "Ecosystem",
                  "markdownText": "Have a look at the linked nodes for different tools and frameworks that you can use to build your projects."
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#ffffff",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1393.1743104000013,
              "y": 1153.4393894069472
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 108,
          "height": 40,
          "type": "squareNode",
          "id": "19",
          "position": {
              "x": 41.42115200000035,
              "y": 39.35320319999988
          },
          "data": {
              "label": "Primitive Types",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1102.9021056000022,
              "y": 400.8620396413423
          },
          "dragging": false,
          "className": "",
          "parentNode": "20"
      },
      {
          "width": 200,
          "height": 200,
          "type": "groupNode",
          "id": "20",
          "position": {
              "x": 1061.4809536000018,
              "y": 361.5088364413424
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "groupNode"
          },
          "style": {
              "zIndex": -1
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1061.4809536000018,
              "y": 361.5088364413424
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 106,
          "height": 40,
          "type": "squareNode",
          "id": "21",
          "position": {
              "x": 42.1520000000005,
              "y": 80.35200000000003
          },
          "data": {
              "label": "Object Types",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "width": 106,
              "height": 40,
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1103.6329536000023,
              "y": 441.8608364413424
          },
          "dragging": false,
          "className": "",
          "parentNode": "20",
          "resizing": false
      },
      {
          "width": 105,
          "height": 40,
          "type": "squareNode",
          "id": "22",
          "position": {
              "x": 43.20000000000027,
              "y": 121.82400000000001
          },
          "data": {
              "label": "Other Types",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "width": 105,
              "height": 40,
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1104.680953600002,
              "y": 483.3328364413424
          },
          "dragging": false,
          "className": "",
          "parentNode": "20",
          "resizing": false
      },
      {
          "width": 200,
          "height": 244,
          "type": "groupNode",
          "id": "23",
          "position": {
              "x": 930.9218176000018,
              "y": 624.7513964413423
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "groupNode"
          },
          "style": {
              "zIndex": -1,
              "width": 200,
              "height": 244
          },
          "selected": false,
          "positionAbsolute": {
              "x": 930.9218176000018,
              "y": 624.7513964413423
          },
          "dragging": false,
          "className": "",
          "resizing": false
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "24",
          "position": {
              "x": 49.247999999999934,
              "y": 33.696000000000026
          },
          "data": {
              "label": "Equality",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 980.1698176000017,
              "y": 658.4473964413423
          },
          "dragging": false,
          "className": "",
          "parentNode": "23"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "25",
          "position": {
              "x": 49.24800000000016,
              "y": 74.30400000000009
          },
          "data": {
              "label": "Truthness",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 980.1698176000019,
              "y": 699.0553964413424
          },
          "dragging": false,
          "className": "",
          "parentNode": "23"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "26",
          "position": {
              "x": 50.112000000000194,
              "y": 137.31999999999994
          },
          "data": {
              "label": "instanceof",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 981.033817600002,
              "y": 762.0713964413422
          },
          "dragging": false,
          "className": "",
          "parentNode": "23"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "27",
          "position": {
              "x": 50.976,
              "y": 177.928
          },
          "data": {
              "label": "typeof",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 981.8978176000018,
              "y": 802.6793964413423
          },
          "dragging": false,
          "className": "",
          "parentNode": "23"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "29",
          "position": {
              "x": 1870.6840896000017,
              "y": 605.2076531816258
          },
          "data": {
              "label": "Union Types",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1870.6840896000017,
              "y": 605.2076531816258
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 200,
          "height": 200,
          "type": "groupNode",
          "id": "30",
          "position": {
              "x": 1618.368441600002,
              "y": 697.7731571816257
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "groupNode"
          },
          "style": {
              "zIndex": -1
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1618.368441600002,
              "y": 697.7731571816257
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 149,
          "height": 40,
          "type": "squareNode",
          "id": "31",
          "position": {
              "x": 26.873855999999932,
              "y": 60.466175999999905
          },
          "data": {
              "label": "Typing Functions",
              "content": {
                  "topicTitle": "Typing Functions",
                  "markdownText": "In TypeScript, functions can be typed in a few different ways to indicate the input parameters and return type of the function.\n\nFunction declaration with types:\n```typescript\nfunction add(a: number, b: number): number {\n  return a + b;\n}\n```\n\nArrow function:\n```typescript\nconst multiply = (a: number, b: number): number => {\n  return a * b;\n};\n```\n\nFunction type:\n```typescript\nlet divide: (a: number, b: number) => number;\n\ndivide = (a, b) => {\n  return a / b;\n};\n```"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "width": 149,
              "height": 40,
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1645.2422976000018,
              "y": 758.2393331816256
          },
          "dragging": false,
          "className": "",
          "parentNode": "30",
          "resizing": false
      },
      {
          "width": 147,
          "height": 40,
          "type": "squareNode",
          "id": "32",
          "position": {
              "x": 28.366847999999663,
              "y": 102.26995200000022
          },
          "data": {
              "label": "Function Overloading",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1646.7352896000016,
              "y": 800.0431091816259
          },
          "dragging": false,
          "className": "",
          "parentNode": "30"
      },
      {
          "width": 334,
          "height": 200,
          "type": "groupNode",
          "id": "33",
          "position": {
              "x": 1009.2277056000021,
              "y": 979.3253779462735
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "",
              "settings": {}
          },
          "style": {
              "zIndex": -1,
              "width": 334,
              "height": 200
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1009.2277056000021,
              "y": 979.3253779462735
          },
          "dragging": false,
          "className": "",
          "resizing": false
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "34",
          "position": {
              "x": 6.943935999999894,
              "y": 34.33881600000052
          },
          "data": {
              "label": "Mapped",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1016.171641600002,
              "y": 1013.664193946274
          },
          "dragging": false,
          "className": "",
          "parentNode": "33"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "35",
          "position": {
              "x": 116.60127999999963,
              "y": 34.65120000000036
          },
          "data": {
              "label": "Conditional",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1125.8289856000017,
              "y": 1013.9765779462739
          },
          "dragging": false,
          "className": "",
          "parentNode": "33"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "36",
          "position": {
              "x": 225.1943679999997,
              "y": 34.38297600000055
          },
          "data": {
              "label": "Literal",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1234.4220736000018,
              "y": 1013.7083539462741
          },
          "dragging": false,
          "className": "",
          "parentNode": "33"
      },
      {
          "width": 114,
          "height": 40,
          "type": "squareNode",
          "id": "37",
          "position": {
              "x": 50.06956799999966,
              "y": 113.17497600000058
          },
          "data": {
              "label": "Template Literal",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1059.2972736000017,
              "y": 1092.5003539462741
          },
          "dragging": false,
          "className": "",
          "parentNode": "33"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "38",
          "position": {
              "x": 173.6695679999998,
              "y": 112.57497600000045
          },
          "data": {
              "label": "Recursive",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1182.8972736000019,
              "y": 1091.900353946274
          },
          "dragging": false,
          "className": "",
          "parentNode": "33"
      },
      {
          "width": 146,
          "height": 40,
          "type": "squareNode",
          "id": "39",
          "position": {
              "x": 1721.6436736000016,
              "y": 1086.7493850337678
          },
          "data": {
              "label": "Global Augmentation",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1721.6436736000016,
              "y": 1086.7493850337678
          },
          "dragging": false,
          "className": ""
      },
      {
          "width": 181,
          "height": 40,
          "type": "squareNode",
          "id": "40",
          "position": {
              "x": 1880.2740736000017,
              "y": 1012.099785033768
          },
          "data": {
              "label": "Namespace Augmentation",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "className": "",
          "positionAbsolute": {
              "x": 1880.2740736000017,
              "y": 1012.099785033768
          },
          "dragging": false
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "41",
          "position": {
              "x": 25.91999999999939,
              "y": 46.656000000000176
          },
          "data": {
              "label": "Formatting",
              "content": {
                  "topicTitle": "Formatting",
                  "markdownText": "Prettier is an opinionated code formatter with support for JavaScript, HTML, CSS, YAML, Markdown, GraphQL Schemas. By far the biggest reason for adopting Prettier is to stop all the on-going debates over styles."
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1279.9668736000015,
              "y": 1302.403785033768
          },
          "dragging": false,
          "className": "",
          "parentNode": "42"
      },
      {
          "width": 356,
          "height": 200,
          "type": "groupNode",
          "id": "42",
          "position": {
              "x": 1254.046873600002,
              "y": 1255.7477850337677
          },
          "data": {
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "label": "",
              "settings": {}
          },
          "style": {
              "zIndex": -1,
              "width": 356,
              "height": 200
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1254.046873600002,
              "y": 1255.7477850337677
          },
          "dragging": false,
          "className": "",
          "resizing": false
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "43",
          "position": {
              "x": 217.45382399999994,
              "y": 45.47673600000007
          },
          "data": {
              "label": "Linting",
              "content": {
                  "topicTitle": "Linting",
                  "markdownText": "With ESLint you can impose the coding standard using a certain set of standalone rules.\n\n[ESLint Official Website](https://eslint.org/)"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1471.500697600002,
              "y": 1301.2245210337678
          },
          "dragging": false,
          "className": "",
          "parentNode": "42"
      },
      {
          "width": 116,
          "height": 40,
          "type": "squareNode",
          "id": "44",
          "position": {
              "x": 17.725132799999983,
              "y": 130.28428800000006
          },
          "data": {
              "label": "Useful Packages",
              "content": {
                  "topicTitle": "Useful Packages",
                  "markdownText": "TypeScript has a large ecosystem of packages that can be used to extend the language or to add functionality to your project. Here is the list of some of the most useful packages.\n\n* zod: A TypeScript-first data validation library\n* ts-morph: A TypeScript-first API for manipulating * TypeScript code\n* ts-node: A TypeScript execution and REPL for node.js\n* ts-jest: A Jest transformer with source map support that lets you use Jest to test projects written in TypeScript.\n* typesync: Install missing TypeScript typings for dependencies in your package.json.\n* tsd - TypeScript Definition Manager\n* type-fest - A collection of essential TypeScript types"
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1271.772006400002,
              "y": 1386.0320730337678
          },
          "dragging": false,
          "className": "",
          "parentNode": "42"
      },
      {
          "width": 100,
          "height": 40,
          "type": "squareNode",
          "id": "45",
          "position": {
              "x": 217.97783679999975,
              "y": 128.72553599999992
          },
          "data": {
              "label": "Build Tools",
              "content": {
                  "topicTitle": "",
                  "markdownText": ""
              },
              "settings": {
                  "alignText": "centercenter",
                  "textSize": "small",
                  "color": "#fdea8b",
                  "borderRadius": 5,
                  "transparancy": 255
              }
          },
          "style": {
              "zIndex": 1,
              "fontSize": "small",
              "background": "#fdea8bff"
          },
          "selected": false,
          "positionAbsolute": {
              "x": 1472.0247104000018,
              "y": 1384.4733210337677
          },
          "dragging": false,
          "className": "",
          "parentNode": "42"
      }
  ],
  "edges": [
      {
          "source": "1",
          "sourceHandle": "b",
          "target": "4",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-1b-4d",
          "selected": false
      },
      {
          "source": "4",
          "sourceHandle": "b",
          "target": "5",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-4b-5d",
          "selected": false
      },
      {
          "source": "4",
          "sourceHandle": "b",
          "target": "6",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-4b-6d",
          "selected": false
      },
      {
          "source": "4",
          "sourceHandle": "b",
          "target": "7",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-4b-7d",
          "selected": false
      },
      {
          "source": "1",
          "sourceHandle": "d",
          "target": "8",
          "targetHandle": "b",
          "type": "default",
          "id": "reactflow__edge-1d-8b",
          "selected": false
      },
      {
          "source": "1",
          "sourceHandle": "c",
          "target": "9",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-1c-9a",
          "selected": false
      },
      {
          "source": "12",
          "sourceHandle": "c",
          "target": "13",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-12c-13d",
          "selected": false
      },
      {
          "source": "13",
          "sourceHandle": "d",
          "target": "14",
          "targetHandle": "b",
          "type": "default",
          "id": "reactflow__edge-13d-14b",
          "selected": false
      },
      {
          "source": "14",
          "sourceHandle": "c",
          "target": "15",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-14c-15a",
          "selected": false
      },
      {
          "source": "15",
          "sourceHandle": "c",
          "target": "16",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-15c-16a",
          "selected": false
      },
      {
          "source": "16",
          "sourceHandle": "b",
          "target": "17",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-16b-17a",
          "selected": false
      },
      {
          "source": "17",
          "sourceHandle": "d",
          "target": "18",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-17d-18a",
          "selected": false
      },
      {
          "source": "11",
          "sourceHandle": "d",
          "target": "21",
          "targetHandle": "b",
          "type": "default",
          "id": "reactflow__edge-11d-21b",
          "selected": false
      },
      {
          "source": "14",
          "sourceHandle": "d",
          "target": "26",
          "targetHandle": "b",
          "type": "default",
          "id": "reactflow__edge-14d-26b",
          "selected": false
      },
      {
          "source": "14",
          "sourceHandle": "d",
          "target": "24",
          "targetHandle": "b",
          "type": "default",
          "id": "reactflow__edge-14d-24b",
          "selected": false
      },
      {
          "source": "13",
          "sourceHandle": "b",
          "target": "29",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-13b-29d",
          "selected": false
      },
      {
          "source": "15",
          "sourceHandle": "b",
          "target": "32",
          "targetHandle": "a",
          "type": "straight",
          "id": "reactflow__edge-15b-32a",
          "selected": false,
          "data": {
              "settings": {}
          },
          "style": {}
      },
      {
          "source": "16",
          "sourceHandle": "d",
          "target": "35",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-16d-35a",
          "selected": false
      },
      {
          "source": "17",
          "sourceHandle": "b",
          "target": "40",
          "targetHandle": "d",
          "type": "default",
          "id": "reactflow__edge-17b-40d",
          "selected": false
      },
      {
          "source": "17",
          "sourceHandle": "b",
          "target": "39",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-17b-39a",
          "selected": false
      },
      {
          "source": "18",
          "sourceHandle": "c",
          "target": "41",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-18c-41a",
          "selected": false
      },
      {
          "source": "18",
          "sourceHandle": "c",
          "target": "43",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-18c-43a",
          "selected": false
      },
      {
          "source": "41",
          "sourceHandle": "c",
          "target": "44",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-41c-44a",
          "selected": false
      },
      {
          "source": "43",
          "sourceHandle": "c",
          "target": "45",
          "targetHandle": "a",
          "type": "default",
          "id": "reactflow__edge-43c-45a",
          "selected": false
      }
  ]
}